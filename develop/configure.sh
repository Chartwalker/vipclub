#!/bin/bash
#
TSC_COPYRIGHT="Copyright: Kaiserrundfunk.com / Jonacast "`date "+%Y"`
TSC_DONTEDIT="Created by Configure at compiling - do not edit this file"
TSC_TIMESTAMP=`date "+%d.%m.%Y %H:%M:%S"`
#
#name of the game :-)
TSC_Proj="vipclub"
TSC_PrettyProj="VIP-Club"
TSC_LANG_DE="de"
TSC_LANG_EN="en"
#
TSC_DEBUG=1
TSC_DEBUG_LIBSYMBIOT=1
TSC_DEBUG_TB=1
TSC_DEBUG_GUI=1
#
# build directories
TSC_Home=$HOME
TSC_Projdir=$HOME/.$TSC_Proj
TSC_Log=`pwd`"/log"
TSC_Src=`pwd`"/src"
TSC_Doc=`pwd`"/doc"
TSC_RPMS=`pwd`"/rpms"
TSC_Libs=`pwd`"/lib"
TSC_Incl=`pwd`"/inc"
#
#version
TSC_Major="0"
TSC_Minor="1"
TSC_Release="1"
TSC_Patch="1"
TSC_Name="$TSC_Proj-$TSC_Major.$TSC_Minor.$TSC_Release-$TSC_Patch"
TSC_CMK=$TSC_Src"/config.mk"
TSC_H=$TSC_Src"/config.h"
TSC_MF=$TSC_Src"/Makefile"
TSC_SPEC=$TSC_RPMS$TSC_Name".spec"
TSC_Echo=`which echo `
TSC_Echoe=`which echo `" -e"
TSC_MK=`which make `
TSC_AR=`which ar`" -rs"
TSC_CC=`which gcc`
TSC_CP=`which cp`
TSC_RM=`which rm`" -f"
TSC_MKDIR=`which mkdir`
TSC_RMDIR=`which rmdir`
TSC_RMDIRI=`which rmdir`" --ignore-fail-on-non-empty"
#
# flags
CFLAGS=`pkg-config --cflags gtk+-3.0`
GLIBFLAGS=`pkg-config --cflags gtk+-3.0`
GTKFLAGS=`pkg-config --libs gtk+-3.0`
#
#$1 start definition line #define or empty
#$2 start remark line
#$3 start action line
#$4 assignment operator or empty
#$5 outputfile

#	[ ! -d $TSC_Projdir ] then $TSC_MKDIR $TSC_Projdir;

tsc_write_make(){

    $TSC_Echoe "write" $1
    $TSC_Echoe "# "$TSC_COPYRIGHT > $1
    $TSC_Echoe "\n# $1 "$TSC_TIMESTAMP >> $1
    $TSC_Echoe "\n# "$TSC_DONTEDIT >> $1
    $TSC_Echoe "\n\n# Globals:\n" >> $1
    $TSC_Echoe "TSC_DEBUG="$TSC_DEBUG >> $1
    $TSC_Echoe "TSC_DEBUG_LIBSYMBIOT="$TSC_DEBUG_LIBSYMBIOT >> $1
    $TSC_Echoe "TSC_DEBUG_TB="$TSC_DEBUG_TB >> $1
    $TSC_Echoe "TSC_DEBUG_GUI="$TSC_DEBUG_GUI >> $1
    $TSC_Echoe "TSC_Proj="$TSC_Proj >> $1
    $TSC_Echoe "TSC_NAME="$TSC_Name >> $1
    $TSC_Echoe "TSC_PrettyProj="$TSC_PrettyProj >> $1
    $TSC_Echoe "TSC_H="$TSC_H >> $1
    $TSC_Echoe "TSC_CMK="$TSC_CMK >> $1
    $TSC_Echoe "TSC_Major="$TSC_Major >> $1
    $TSC_Echoe "TSC_Minor="$TSC_Major >> $1
    $TSC_Echoe "TSC_Release="$TSC_Release >> $1
    $TSC_Echoe "TSC_Patch="$TSC_Patch >> $1
    $TSC_Echo "TSC_Echo="$TSC_Echo >> $1
    $TSC_Echoe "TSC_Echoe="$TSC_Echoe >> $1
    $TSC_Echoe "TSC_MK="$TSC_MK >> $1
    $TSC_Echoe "TSC_CC="$TSC_CC >> $1
    $TSC_Echoe "TSC_CP="$TSC_CP >> $1
    $TSC_Echoe "TSC_RM="$TSC_RM >> $1
    $TSC_Echoe "TSC_MKDIR="$TSC_MKDIR >> $1
    $TSC_Echoe "TSC_RMDIR="$TSC_RMDIR >> $1
    $TSC_Echoe "TSC_RMDIRI="$TSC_RMDIRI >> $1
    $TSC_Echoe "TSC_AR="$TSC_AR >> $1
    $TSC_Echoe "CFLAGS="$CFLAGS >> $1
    $TSC_Echoe "GLIBFLAGS="$GLIBFLAGS >> $1
    $TSC_Echoe "GTKFLAGS="$GTKFLAGS >> $1
    $TSC_Echoe "TSC_Libs="$TSC_Libs >> $1
    $TSC_Echoe "TSC_Incl="$TSC_Incl >> $1
    $TSC_Echoe "TSC_Log="$TSC_Log >> $1
    $TSC_Echoe "TSC_Home="$TSC_Home >> $1
    $TSC_Echoe "TSC_Projdir="$TSC_Projdir >> $1
}

tsc_write_h(){

    $TSC_Echoe "write" $1
    $TSC_Echoe "// "$TSC_COPYRIGHT > $1
    $TSC_Echoe "\n// $1 "$TSC_TIMESTAMP >> $1
    $TSC_Echoe "\n// "$TSC_DONTEDIT >> $1
    $TSC_Echoe "\n\n// Globals:\n" >> $1
    $TSC_Echoe "\n#include <glib.h>\n" >> $1
    $TSC_Echoe "guint TSC_DEBUG="$TSC_DEBUG";" >> $1
    $TSC_Echoe "guint TSC_DEBUG_LIBSYMBIOT="$TSC_DEBUG_LIBSYMBIOT";" >> $1
    $TSC_Echoe "guint TSC_DEBUG_TB="$TSC_DEBUG_TB";" >> $1
    $TSC_Echoe "guint TSC_DEBUG_GUI="$TSC_DEBUG_GUI";" >> $1
    $TSC_Echoe "guint TSC_Major="$TSC_Major";" >> $1
    $TSC_Echoe "guint TSC_Minor="$TSC_Major";" >> $1
    $TSC_Echoe "guint TSC_Release="$TSC_Release";" >> $1
    $TSC_Echoe "guint TSC_Patch="$TSC_Patch";\n" >> $1
    $TSC_Echoe "const char *TSC_Proj="\"$TSC_Proj\"";" >> $1
    $TSC_Echoe "const char *TSC_NAME="\"$TSC_Name\"";" >> $1
    $TSC_Echoe "const char *TSC_PrettyProj="\"$TSC_PrettyProj\"";" >> $1
    $TSC_Echoe "const char *TSC_H="\"$TSC_H\"";" >> $1
    $TSC_Echoe "const char *TSC_CMK="\"$TSC_CMK\"";" >> $1
    $TSC_Echo  "const char *TSC_Echo="\"$TSC_Echo\"";" >> $1
    $TSC_Echoe "const char *TSC_Echoe="\"$TSC_Echoe\"";" >> $1
    $TSC_Echoe "const char *TSC_MK="\"$TSC_MK\"";" >> $1
    $TSC_Echoe "const char *TSC_CC="\"$TSC_CC\"";" >> $1
    $TSC_Echoe "const char *TSC_CP="\"$TSC_CP\"";" >> $1
    $TSC_Echoe "const char *TSC_RM="\"$TSC_RM\"";" >> $1
    $TSC_Echoe "const char *TSC_MKDIR="\"$TSC_MKDIR\"";" >> $1
    $TSC_Echoe "const char *TSC_RMDIR="\"$TSC_RMDIR\"";" >> $1
    $TSC_Echoe "const char *TSC_RMDIRI="\"$TSC_RMDIRI\"";" >> $1
    $TSC_Echoe "const char *TSC_AR="\"$TSC_AR\"";" >> $1
    $TSC_Echoe "const char *CFLAGS="\"$CFLAGS\"";" >> $1
    $TSC_Echoe "const char *GLIBFLAGS="\"$GLIBFLAGS\"";" >> $1
    $TSC_Echoe "const char *GTKFLAGS="\"$GTKFLAGS\"";" >> $1
    $TSC_Echoe "const char *TSC_Libs="\"$TSC_Libs\"";" >> $1
    $TSC_Echoe "const char *TSC_Incl="\"$TSC_Incl\"";" >> $1
    $TSC_Echoe "const char *TSC_Log="\"$TSC_Log\"";" >> $1
    $TSC_Echoe "const char *TSC_Home="\"$TSC_Home\"";" >> $1
    $TSC_Echoe "const char *TSC_Projdir="\"$TSC_Projdir\"";\n" >> $1
}



tsc_write_make $TSC_CMK
tsc_write_h $TSC_H

tsc_write_spec(){
    $TSC_Echoe "$1\n$1 Spec-File ($2) for "$2"\n$1" > $4
    $TSC_Echoe "Summary: A VIP-Club ($2) Plugin for Broadcasters" >> $4
    $TSC_Echoe "Version: "$TSC_Major"."$TSC_Minor  >> $4
    $TSC_Echoe "Release: "$TSC_Release"-"$TSC_Patch >> $4
    $TSC_Echoe "License: MIT" >> $4
    $TSC_Echoe "Group: Applications/Multimedia" >> $4
    $TSC_Echoe "Source: https://github.com/Chartwalker/VipClub/stable/"$TSC_Name".src.tgz" >> $4
    $TSC_Echoe "URL: https://github.com/Chartwalker/VipClub/stable/doc/index.html" >> $4
    $TSC_Echoe "\n%description: see manual pdf at "$TSC_Doc >> $4
}
tsc_write_spec "#" "de" $TSC_LANG_DE $TSC_SPEC
